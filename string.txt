# CHARACTER
sc.next().charAt(0)
(s.charAt(8)=='P')     // for value (char)
(hr.equals("12"))     // for address (string)
"\\s"   \s -> space
' '      space
//for adding two char and get string need string ahead
eg. ""+'a'+'b' -> ab
       'a'+'b' -> 195

0-9 -> (48<=c && c<=57) 
A-Z -> (65<=c && c<=90)
a-z -> (97<=c && c<=122)
	


# STRING	
String s="string";
String s=new String("string");      
str.length()
str.charAt(index)
str.indexOf(char, Starting index to search)      
str1.equals(str2)     --> true/false
str1.compareTo(str2)  --> returns int (0 for equal)
str.substring(index1, index2 excluding)
str.replace("a", "b")  -> a replaced with b (for char or string both)
str.replaceAll("b")    -> All chars replaced with b
str.trim()   -> removes spaces from both ends only
str.split(string);    //dot(.) is special char, so str.split("\\.");
str.toUpperCase()
str.toLowerCase()

// conversion
String str = String.valueOf(var)     
String str = sb.toString()           // StringBuilder   
String str = new String(charArr)
String str = Arrays.toString(arr)   
String str = Integer.toString(num) 
int n = Integer.parseInt(str)

String.format("%.2f",2.3545)
String.format("%02d", 01);
System.out.printf("%.2f", val);

range of string
^ -> except
"[^a-zA-Z0-9]"


		


# StringBuilder sb = new StringBuilder("string");   // string to StringBuilder
//sb.length()
//sb.charAt(index)                     --> searching
//sb.append()                         --> insert at last
//sb.insert(index, char)              --> insert by index
//sb.setCharAt(index, newChar)           --> replace by index
//sb.setCharAt(oldChar, newChar)           --> replace by value
//sb.delete(index1, index2 excluding)

  

 

	

		
		 




       
